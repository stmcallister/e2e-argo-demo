name: e2e-demo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        
      - uses: debianmaster/actions-k3s@master
        id: k3s
        with:
          version: 'latest'

      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_AUTHTOKEN }}
          logout: true

      - name: Build docker images
        run: |
          # Fails the build if anything returns non-zero
          set -e
          # Echo commands to the console
          set -x

          # Build backend and frontend images
          cd backend
          docker build -t ${{ secrets.DOCKER_URL }}/burger-back:${{ github.sha }} .
          cd ../frontend
          docker build -t ${{ secrets.DOCKER_URL }}/burger-front:${{ github.sha }} .
          cd ../

      - name: Push Docker Images
        run: |
          # push docker images to dockerhub
          docker push ${{ secrets.DOCKER_URL }}/burger-back:${{ github.sha }}
          docker push ${{ secrets.DOCKER_URL }}/burger-front:${{ github.sha }}

      - name: Configure and Deploy Cluster
        run: |
          # Alter k8s.yaml to sed the version
          sed -i'' -e 's/DOCKER_URL/${{ secrets.DOCKER_URL }}/g' -e 's/IMAGE_LABEL/${{ github.sha }}/g' -e 's/FRONTEND_URL/${{ vars.FRONTEND_URL }}/g' k8s.yaml

          # Install ngrok ingress controller
          helm repo add ngrok https://ngrok.github.io/kubernetes-ingress-controller
          helm install ngrok-ingress-controller ngrok/kubernetes-ingress-controller \
            --namespace burgers \
            --create-namespace \
            --set credentials.apiKey=${{ secrets.NGROK_API_KEY }} \
            --set credentials.authtoken=${{ secrets.NGROK_AUTHTOKEN }}

          # Run containers in k3s
          kubectl apply -f k8s.yaml

      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1

      - name: Build Cypress Container and Run
        run: |
          kubectl get all -A
          # Launch cypress container
          cd e2e/
          docker build -t burger-e2e:${{ github.sha }} .
          docker run -e FRONTEND_URL='https://${{ vars.FRONTEND_URL }}' burger-e2e:${{ github.sha }}
          
          # switch contexts
          # kubectl config set-context your-cloud
          
          # launch apps in production
          # kubectl apply -f k8s.yaml

